// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OrganizaMed.Infraestrutura.Orm.Compartilhado;

#nullable disable

namespace OrganizaMed.Infraestrutura.Orm.Migrations
{
    [DbContext(typeof(OrganizaMedDbContext))]
    [Migration("20241204174338_AddAtividadeMedica")]
    partial class AddAtividadeMedica
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AtividadeMedicaMedico", b =>
                {
                    b.Property<Guid>("AtividadesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MedicosId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AtividadesId", "MedicosId");

                    b.HasIndex("MedicosId");

                    b.ToTable("TBAtividadeMedica_TBMedico", (string)null);
                });

            modelBuilder.Entity("OrganizaMed.Dominio.ModuloAtividade.AtividadeMedica", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Inicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Termino")
                        .HasColumnType("datetime2");

                    b.Property<int>("TipoAtividade")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TBAtividadeMedica", (string)null);

                    b.HasDiscriminator<int>("TipoAtividade");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("OrganizaMed.Dominio.ModuloMedico.Medico", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Crm")
                        .IsRequired()
                        .HasColumnType("char(8)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("TBMedico", (string)null);
                });

            modelBuilder.Entity("OrganizaMed.Dominio.ModuloAtividade.Cirurgia", b =>
                {
                    b.HasBaseType("OrganizaMed.Dominio.ModuloAtividade.AtividadeMedica");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("OrganizaMed.Dominio.ModuloAtividade.Consulta", b =>
                {
                    b.HasBaseType("OrganizaMed.Dominio.ModuloAtividade.AtividadeMedica");

                    b.HasDiscriminator().HasValue(0);
                });

            modelBuilder.Entity("AtividadeMedicaMedico", b =>
                {
                    b.HasOne("OrganizaMed.Dominio.ModuloAtividade.AtividadeMedica", null)
                        .WithMany()
                        .HasForeignKey("AtividadesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OrganizaMed.Dominio.ModuloMedico.Medico", null)
                        .WithMany()
                        .HasForeignKey("MedicosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
